#!/usr/bin/env python3
"""
AWS Setup Helper for Telegram Account Selling Bot
Interactive script to configure environment variables securely
"""

import os
import secrets
import sys

def generate_secret_key():
    """Generate a secure random secret key"""
    return secrets.token_urlsafe(32)

def get_input(prompt, default=None, required=True):
    """Get user input with optional default value"""
    if default:
        prompt = f"{prompt} [{default}]: "
    else:
        prompt = f"{prompt}: "
    
    while True:
        value = input(prompt).strip()
        if value:
            return value
        elif default:
            return default
        elif not required:
            return None
        else:
            print("‚ùå This field is required. Please enter a value.")

def main():
    print("=" * 60)
    print("üöÄ Telegram Bot AWS Configuration Helper")
    print("=" * 60)
    print()
    print("This script will help you configure your bot's environment variables.")
    print("All values will be saved securely to /etc/telegram-bot/.env")
    print()
    
    # Collect configuration
    config = {}
    
    print("üìã Bot Configuration")
    print("-" * 60)
    
    config['TELEGRAM_BOT_TOKEN'] = get_input(
        "Bot Token (from @BotFather)",
        required=True
    )
    
    config['API_ID'] = get_input(
        "API ID (from my.telegram.org)",
        required=True
    )
    
    config['API_HASH'] = get_input(
        "API Hash (from my.telegram.org)",
        required=True
    )
    
    config['ADMIN_TELEGRAM_ID'] = get_input(
        "Admin Telegram ID (your user ID)",
        required=True
    )
    
    print()
    print("üîê Security Configuration")
    print("-" * 60)
    
    secret_key = get_input(
        "Secret Key (press Enter to auto-generate)",
        required=False
    )
    
    if not secret_key:
        secret_key = generate_secret_key()
        print(f"‚úÖ Generated secure secret key: {secret_key[:20]}...")
    
    config['SECRET_KEY'] = secret_key
    
    print()
    print("üóÑÔ∏è  Database Configuration")
    print("-" * 60)
    
    db_password = get_input(
        "PostgreSQL password",
        default="postgres"
    )
    
    db_name = get_input(
        "Database name",
        default="telegrambot"
    )
    
    config['DATABASE_URL'] = f"postgresql://postgres:{db_password}@localhost/{db_name}"
    
    # Optional configurations
    print()
    print("‚öôÔ∏è  Optional Configuration (press Enter to skip)")
    print("-" * 60)
    
    leader_channel = get_input(
        "Leader Channel ID (for withdrawal notifications)",
        required=False
    )
    if leader_channel:
        config['LEADER_CHANNEL_ID'] = leader_channel
    
    # Write configuration to file
    print()
    print("üíæ Saving configuration...")
    
    # Create directory
    env_dir = "/etc/telegram-bot"
    env_file = f"{env_dir}/.env"
    
    try:
        # Check if we need sudo
        if os.geteuid() != 0:
            print()
            print("‚ö†Ô∏è  This script needs to create /etc/telegram-bot/.env")
            print("Please run with sudo:")
            print(f"  sudo python3 {sys.argv[0]}")
            print()
            print("Alternatively, manually create the file with this content:")
            print("-" * 60)
            for key, value in config.items():
                print(f"{key}={value}")
            print("-" * 60)
            return
        
        # Create directory
        os.makedirs(env_dir, exist_ok=True)
        
        # Write configuration
        with open(env_file, 'w') as f:
            f.write("# Telegram Bot Configuration\n")
            f.write("# Generated by aws_setup_helper.py\n\n")
            for key, value in config.items():
                f.write(f"{key}={value}\n")
        
        # Set permissions
        os.chmod(env_file, 0o600)
        os.chown(env_file, 1000, 1000)  # ubuntu user
        
        print(f"‚úÖ Configuration saved to {env_file}")
        print()
        print("üéâ Setup complete!")
        print()
        print("Next steps:")
        print("1. Create database: sudo -u postgres createdb telegrambot")
        print("2. Initialize tables: python3 -c 'from database import init_db; init_db()'")
        print("3. Start the bot: sudo systemctl start telebot")
        print()
        
    except PermissionError:
        print()
        print("‚ùå Permission denied. Please run with sudo:")
        print(f"  sudo python3 {sys.argv[0]}")
        print()
    except Exception as e:
        print(f"‚ùå Error: {e}")
        print()
        print("Manual configuration:")
        print("-" * 60)
        for key, value in config.items():
            print(f"{key}={value}")
        print("-" * 60)

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n‚ùå Configuration cancelled.")
        sys.exit(1)
